<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="19" failures="0" errors="0" time="23.752">
  <testsuite name="OperacionesService" errors="0" failures="0" skipped="0" timestamp="2025-08-23T22:39:44" time="17.609" tests="7">
    <testcase classname="OperacionesService debería sumar correctamente" name="OperacionesService debería sumar correctamente" time="0.052">
    </testcase>
    <testcase classname="OperacionesService debería restar correctamente" name="OperacionesService debería restar correctamente" time="0.003">
    </testcase>
    <testcase classname="OperacionesService debería multiplicar correctamente" name="OperacionesService debería multiplicar correctamente" time="0.001">
    </testcase>
    <testcase classname="OperacionesService debería dividir correctamente" name="OperacionesService debería dividir correctamente" time="0.003">
    </testcase>
    <testcase classname="OperacionesService debería devolver NaN si división por cero" name="OperacionesService debería devolver NaN si división por cero" time="0.003">
    </testcase>
    <testcase classname="OperacionesService debería devolver 0 si se divide 0 entre algo" name="OperacionesService debería devolver 0 si se divide 0 entre algo" time="0.002">
    </testcase>
    <testcase classname="OperacionesService debería devolver undefined para operación desconocida" name="OperacionesService debería devolver undefined para operación desconocida" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="AppService" errors="0" failures="0" skipped="0" timestamp="2025-08-23T22:39:44" time="19.312" tests="5">
    <testcase classname="AppService Servicio definido" name="AppService Servicio definido" time="0.071">
    </testcase>
    <testcase classname="AppService getHello() devuelve saludo" name="AppService getHello() devuelve saludo" time="0.006">
    </testcase>
    <testcase classname="AppService getApikey() devuelve la API key con !!" name="AppService getApikey() devuelve la API key con !!" time="0.006">
    </testcase>
    <testcase classname="AppService validateRut() retorna true para RUT válido" name="AppService validateRut() retorna true para RUT válido" time="0.011">
    </testcase>
    <testcase classname="AppService validateRut() retorna false para RUT inválido" name="AppService validateRut() retorna false para RUT inválido" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="OperacionesController" errors="0" failures="0" skipped="0" timestamp="2025-08-23T22:39:44" time="19.454" tests="3">
    <testcase classname="OperacionesController debería retornar resultado correcto cuando la operación es válida" name="OperacionesController debería retornar resultado correcto cuando la operación es válida" time="0.054">
    </testcase>
    <testcase classname="OperacionesController debería retornar error cuando la operación no es válida" name="OperacionesController debería retornar error cuando la operación no es válida" time="0.007">
    </testcase>
    <testcase classname="OperacionesController debería retornar NaN si el service devuelve NaN" name="OperacionesController debería retornar NaN si el service devuelve NaN" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="AppController" errors="0" failures="0" skipped="0" timestamp="2025-08-23T22:39:44" time="21.468" tests="4">
    <testcase classname="AppController / (GET)" name="AppController / (GET)" time="0.151">
    </testcase>
    <testcase classname="AppController /apikey (GET)" name="AppController /apikey (GET)" time="0.014">
    </testcase>
    <testcase classname="AppController /validate-rut valido (GET)" name="AppController /validate-rut valido (GET)" time="0.014">
    </testcase>
    <testcase classname="AppController /validate-rut invalido (GET)" name="AppController /validate-rut invalido (GET)" time="0.016">
    </testcase>
  </testsuite>
</testsuites>